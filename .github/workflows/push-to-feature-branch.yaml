name: Push to feature branch
on:
  push:
    branches:
      - 'feature/*'
jobs:
  config:
    name: Prepare configuration
    runs-on: ubuntu-latest
    outputs:
      java_config: ${{ steps.config.outputs.java_config }}
      java_version: ${{ fromJSON(steps.config.outputs.java_config).java.version }} # try to print without fromJSON
      maven_config: ${{ steps.config.outputs.maven_config }}
      git_config: ${{ steps.config.outputs.git_config }}
      github_config: ${{ steps.config.outputs.github_config }}
      file_not_exists_config: ${{ steps.config.outputs.file_not_exists_config }}
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4
      - name: prepare
        run: |
          jq -c '.' '.github/build-config.json'
          jq -c '.maven_config' '.github/build-config.json'
          jq -c '.maven_config.version' '.github/build-config.json'
      - id: config
        run: |          
          echo "title='GitHub Actions'" >> "$GITHUB_OUTPUT"
          echo "java_config=$(jq -c '.' '.github/java-config.json')" >> "$GITHUB_OUTPUT"
          echo "maven_config=$(jq -c '.maven_config' '.github/build-config.json')" >> "$GITHUB_OUTPUT"
          echo "git_config=$(jq -c '.git_config' '.github/build-config.json')" >> "$GITHUB_OUTPUT"
          echo "github_config=$(jq -c '.' '.github/github-config.json')" >> "$GITHUB_OUTPUT"
          echo "file_not_exists_config=$(jq -c '.' '.github/file-not-exists-config.json')" >> "$GITHUB_OUTPUT"
          echo "empty_string=''" >> "$GITHUB_OUTPUT"          
          echo "null_value=" >> "$GITHUB_OUTPUT"          
      - name: Print title
        run: echo ${{ steps.config.outputs.title }}
      - name: Print java config
        run: |
          echo ${{ steps.config.outputs.java_config }}
          echo ${{ fromJSON(steps.config.outputs.java_config).java.version }}
          echo ${{ steps.config.outputs.java_config.java.version }}
      - name: Print maven config (maven config is not ready)
        run: echo ${{ steps.config.outputs.maven_config }}
      - name: Print github config  
        run: echo ${{ steps.config.outputs.github_config }}
      - name: Pring github runner
        run: echo ${{ steps.config.outputs.github_config.runner }}  
      - name: Print file_not_exists config
        run: echo ${{ steps.config.outputs.file_not_exists_config }} 
      - name: Print file_not_exists value
        run: echo ${{ steps.config.outputs.file_not_exists_config.value }}
      - name: Check if a value is null
        run: |
          echo ${{ steps.config.outputs.github_config == null }}
          echo ${{ steps.config.outputs.github_config.runner == null }}
          echo ${{ steps.config.outputs.file_not_exists_config == null }}  
          echo ${{ steps.config.outputs.file_not_exists_config.value == null }}  
          echo ${{ steps.config.outputs.null_value == null }} 
          echo ${{ fromJSON(steps.config.outputs.github_config).runner }}
      - name: Working with empty string
        if: steps.config.outputs.empty_string
        run: |
          echo value: ${{ steps.config.outputs.empty_string }}
          echo isNull: ${{ steps.config.outputs.empty_string == null }}    
          echo json: ${{ toJSON(steps.config.outputs.empty_string) }}      
          echo empty_string.value: ${{ fromJSON(steps.config.outputs.empty_string).value }}
      - name: Working with null value
        if: steps.config.outputs.null_value 
        run: |
          echo value ${{ steps.config.outputs.null_value && steps.config.outputs.null_value || 'null' }}
          echo check nullablity ${{ steps.config.outputs.null_value == null }}    
          echo json  ${{ toJSON(steps.config.outputs.null_value) }}
      - name: read null value attributes
        if: steps.config.outputs.null_value != null
        run: echo null_value.value ${{ fromJSON(steps.config.outputs.null_value).value }}
  
  evaluate:
    name: Evaluate configuration
    runs-on: ubuntu-latest
    needs:
      - config
    steps:
      - name: Print java config
        run: echo ${{ needs.config.outputs.java_config }}
      - name: Print java version
        run: echo ${{ fromJSON(needs.config.outputs.java_config).java.version }}
      - name: Print java version
        run: echo ${{ needs.config.outputs.java_version }}
      - name: Print maven config
        run: echo ${{ needs.config.outputs.maven_config }}
      - name: Print maven version
        run: echo ${{ fromJSON(needs.config.outputs.maven_config).version }}
      - name: Print git config
        run: echo ${{ needs.config.outputs.git_config }}
      - name: Print git version
        run: echo ${{ fromJSON(needs.config.outputs.git_config).version }}
      - name: Print github config
        run: echo ${{ needs.config.outputs.github_config }}
      - name: Print github runner
        run: echo ${{ fromJSON(needs.config.outputs.github_config).runner }}
      - name: Print file_not_exists config
        run: echo ${{ needs.config.outputs.file_not_exists_config }}
      - name: Print file_not_exists value
        if: 0 == 1
        run: echo ${{ fromJSON(needs.config.outputs.file_not_exists_config).value }}
  evaluate-config-files:
    runs-on: ubuntu-latest
    needs:
      - config
    steps:
      - name: Check if a config file exists
        if: 0 == 1
        run: test -f .github/file-not-exists-config.json
        id: file_not_exists 